@page
@model MASOG_OBRAS.Pages.Reportes.Dashboard.IndexModel
@{
    ViewData["Title"] = "Index";
}

<h1>Dashboard</h1>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <h4>Filtros</h4>
        <p>
            Año desde:&nbsp;
            <input type="search" name="SearchAF" id="SearchAF" value="@Model.CurrentAF" /> &nbsp; | &nbsp;
            Año hasta:
            <input type="search" name="SearchAT" id="SearchAT" value="@Model.CurrentAT" /> &nbsp; <br />
            Mes desde:
            <input type="search" name="SearchMF" id="SearchMF" value="@Model.CurrentMF" /> &nbsp; | &nbsp;
            Mes hasta:
            <input type="search" name="SearchMT" id="SearchMT" value="@Model.CurrentMT" /> &nbsp; | &nbsp;
            <input type="submit" value="Buscar" class="btn btn-primary" /> |
            <a asp-page="./Index">Limpiar filtros</a>
        </p>
    </div>
</form>

<section class="content">
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-6 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3> $ @string.Format("{0:C2}", @Model.TotalIngresosS)</h3>

                        <p>Ingresos del período.</p>
                    </div>
                    <div class="icon">
                        <i class="ion-arrow-graph-up-right"></i>
                    </div>
                    <a asp-page="/Reportes/Ingresos/Index" class="small-box-footer"> + Info  <i class="fas fa-arrow-circle-right"></i> </a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-6 col-6">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3> $ @string.Format("{0:C2}", @Model.TotalEgresosS)</h3>
                        <p>Egresos del período.</p>
                    </div>
                    <div class="icon">
                        <i class="ion-arrow-graph-down-right"></i>
                    </div>
                    <a asp-page="/Reportes/Egresos/Index" class="small-box-footer">+Info <i class="fas fa-arrow-circle-right"></i> </a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-6 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>Top Productos</h3>
                        <p>Los productos que más hemos vendido.</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-social-buffer-outline"></i>
                    </div>
                    <a asp-page="/Reportes/RankingProductos/Index" class="small-box-footer">+Info <i class="fas fa-arrow-circle-right"></i> </a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-6 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>Proyectos: @Model.TotalProyecto</h3>
                        <p>Proyectos totales realizados.</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-hammer"></i>
                    </div>
                    <a asp-page="/Clientes/Proyectos/Index" class="small-box-footer"> +Info  <i class="fas fa-arrow-circle-right"></i> </a>
                </div>
            </div>
            <!-- ./col -->
        </div>
        <!-- ./row -->
        <!-- Grafico de Ingresos vs Egresos-->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header border-0">
                        <div class="d-flex justify-content-between">
                            <h3 class="card-title">Ingresos vs Egresos</h3>
                            <a asp-page="/Reportes/IngresosVsEgresos/Index">Ver Reporte</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="d-flex">
                            @*<p class="d-flex flex-column">
                                    <span class="text-bold text-lg">820</span>
                                    <span>Operaciones</span>
                                </p>*@
                            <p class="ml-auto d-flex flex-column text-right">
                                @if (Model.BalancePeriodo > 0)
                                {
                                    <span class="text-success">
                                        <i class="fas fa-arrow-up"></i> $ @string.Format("{0:$#,##0.00}", @Model.BalancePeriodoS)
                                    </span>
                                }
                                else
                                {
                                    <span class="text-danger">
                                        <i class="fas fa-arrow-down"></i> $ @string.Format("{0:$#,##0.00}", @Model.BalancePeriodoS)
                                    </span>
                                }
                                <span class="text-muted">Balance del período.</span>
                            </p>
                        </div>
                        <!-- /.d-flex -->

                        <div class="position-relative mb-4">
                            <canvas id="ingresosegresos-chart" height="500"></canvas>
                            <!-- <canvas id="visitors-chart" height="200"></canvas> -->
                        </div>

                        <div class="d-flex flex-row justify-content-end">
                            <span class="mr-2">
                                <i class="fas fa-square" style="color:#009933"></i> Ingresos
                            </span>

                            <span>
                                <i class="fas fa-square" style="color:#e60000"></i> Egresos
                            </span>
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </div>
        </div>
        <!-- ./row -->
    </div>
</section>
@*@section Scripts {
        <script src="~/js/ReportesVentaGastos.js"></script>
    }*@

<script>

    var searchAF = document.getElementById("SearchAF").value;
    var searchAT = document.getElementById("SearchAT").value;
    var searchMF = document.getElementById("SearchMF").value;
    var searchMT = document.getElementById("SearchMT").value;

    var ticksStyle = {
        fontColor: '#495057',
        fontStyle: 'bold',
        fontSize: 15,
    }

    var mode = 'index'
    var intersect = true

    var myAmountEntry = [];
    var myAmountEgress = [];
    var myMonthList = [];
    var myResum;

    function showChart() {

        myAmountEntry = myResum.amountEntryList;
        myAmountEgress = myResum.amountEgressList;
        myMonthList = myResum.monthList;

        let popCanvasName = document.getElementById("ingresosegresos-chart");
        let lineChartName = new Chart(popCanvasName, {
            data: {
                labels: myMonthList,
                datasets: [{
                    label: 'Ingresos',
                    type: 'line',
                    data: myAmountEntry,
                    backgroundColor: 'transparent',
                    // color azul
                    /*borderColor: '#007bff',
                    pointBorderColor: '#007bff',
                    pointBackgroundColor: '#007bff',*/
                    // color verde
                    borderColor: '#009933',
                    pointBorderColor: '#009933',
                    pointBackgroundColor: '#009933',
                    fill: false,
                    //pointHoverBackgroundColor: '#007bff',
                    //pointHoverBorderColor    : '#007bff'
                },
                {
                    label: 'Egresos',
                    type: 'line',
                    data: myAmountEgress,
                    backgroundColor: 'tansparent',
                    // color gris
                    /* borderColor: '#ced4da',
                    pointBorderColor: '#ced4da',
                    pointBackgroundColor: '#ced4da', */
                    // color rojo
                    borderColor: '#e60000',
                    pointBorderColor: '#e60000',
                    pointBackgroundColor: '#e60000',
                    fill: false
                    // pointHoverBackgroundColor: '#ced4da',
                    // pointHoverBorderColor    : '#ced4da'
                }]
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    mode: mode,
                    intersect: intersect,
                    callbacks: {
                        label: function (t, d) {
                            var xLabel = d.datasets[t.datasetIndex].label;
                            var yLabel = t.yLabel.toLocaleString("es-AR", { style: "currency", currency: "ARS" });
                            return xLabel + ': ' + yLabel;
                        }
                    }
                },
                hover: {
                    mode: mode,
                    intersect: intersect
                },
                legend: {
                    display: true,
                    labels: {
                        fontColor: '#495057',
                        fontStyle: 'bold',
                        fontSize: 15,
                    }
                },
                scales: {
                    yAxes: [{
                        // display: false,
                        gridLines: {
                            display: true,
                            lineWidth: '4px',
                            color: 'rgba(0, 0, 0, .2)',
                            zeroLineColor: 'transparent'
                        },
                        ticks: $.extend({
                            beginAtZero: true,
                            callback: function (value, index, values) {
                                return value.toLocaleString("es-AR", { style: "currency", currency: "ARS" });
                            }
                        }, ticksStyle)
                    }],
                    xAxes: [{
                        display: true,
                        gridLines: {
                            display: false
                        },
                        ticks: ticksStyle
                    }]
                }
            }
        });
    }

    function getChartData() {
        //return fetch('./Dashboard?handler=InvoiceChartData',
        return fetch('./Dashboard?handler=InvoiceChartData&SearchAF=' + searchAF + '&SearchAT=' + searchAT + '&SearchMF=' + searchMF + '&SearchMT=' + searchMT,
            {
                method: 'get',
                headers: {
                    'Content-Type': 'application/json;charset=UTF-8'
                }
            })
            .then(function (response) {
                if (response.ok) {
                    return response.text();
                } else {
                    throw Error('Response Not OK');
                }
            })
            .then(function (text) {
                try {
                    return JSON.parse(text);
                } catch (err) {
                    throw Error('Method Not Found');
                }
            })
            .then(function (responseJSON) {
                myResum = responseJSON;
                showChart();
            })
    }

     getChartData();

</script>